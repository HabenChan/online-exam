apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "org.javamaster.fragmentlearning"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility '1.8'
        targetCompatibility '1.8'
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"http://www.javamaster.org:9888\"")
            buildConfigField("Boolean", "EXERCISE_MODE", "false")
        }
        debug {
            buildConfigField("String", "BASE_URL", "\"http://${getIP()}:9888\"")
            buildConfigField("Boolean", "EXERCISE_MODE", "false")
        }
    }
    buildToolsVersion = '28.0.3'
}

ext {
    dagger_version = "2.24"
    butterknife_version = "10.1.0"
    jackson_version = "2.9.9"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-plus:17.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"

    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    implementation 'com.squareup.okhttp3:okhttp:4.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.0'

    implementation 'org.litepal.android:kotlin:3.0.0'

    implementation 'org.apache.commons:commons-lang3:3.8'
    debugImplementation 'com.idescout.sql:sqlscout-server:4.1'
    releaseImplementation 'com.idescout.sql:sqlscout-server-noop:4.1'

    implementation 'de.hdodenhof:circleimageview:2.1.0'
    // Glide 一个强大的图片加载库,可以加载网络图片,GIF图片,甚至是本地视频
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    // 为组件添加角标的开源库
    implementation 'com.github.liangzhongtai:TipTextView:v1.1'

}

def getIP() {
    InetAddress result = null
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces()
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses()
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement()
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return address.getHostAddress()
                } else if (result == null) {
                    result = address
                }
            }
        }
    }
    return (result != null ? result : InetAddress.getLocalHost()).getHostAddress()
}
